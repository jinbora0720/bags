library(tidyverse)
theme_set(theme_bw())

# set seed 
seed <- 20220720

# create coordinates on a grid 
ngrid_e <- 15 # number of grid on the easting axis 
ngrid_n <- 15 # number of grid on the northing axis 
ngrid_t <- 2  # number of grid on the time axis

grid_e <- seq(0, 1, length = ngrid_e)
grid_n <- seq(0, 1, length = ngrid_n)
grid_t <- seq(0, 1, length = ngrid_t)
coords <- expand.grid(easting = grid_e, northing = grid_n, time = grid_t) %>%
  arrange(time, easting, northing)
n <- nrow(coords)

# set the number of partitions in each coordinate axis 
n_easting <- 1 
n_northing <- 5 
n_time <- 2 

# set the true direction
z_true <- rep("N", times = n_easting*n_northing*n_time)

# set parameters
a <- 0.2 
c <- 1 
kappa <- 0.9
sig_sq <- 1
tau_sq <- 0.2

# generate data 
data <- rbag(coords = coords,
             n_partition = c(n_easting, n_northing, n_time),
             breaks_partition = list(breaks_easting = NULL,
                                     breaks_northing = NULL,
                                     breaks_time = NULL),
             z = z_true,
             params = list(tau_sq = tau_sq,
                           sig_sq = sig_sq,
                           a = a, c = c, kappa = kappa,
                           beta = NULL),
             seed = seed)

# assign 80% of data to train data
coords_tr <- expand.grid(easting = grid_e, northing = grid_n) %>% 
  slice_sample(prop = 0.8) %>% 
  bind_cols(as.list(setNames(grid_t[1:ngrid_t], paste0("time_", 1:ngrid_t)))) %>% 
  pivot_longer(starts_with("time_"), 
               values_to = "time") %>% 
  select(-name) %>% 
  arrange(time, easting, northing)
data_tr <- left_join(coords_tr, data, by = c("easting", "northing", "time"))
data_tt <- anti_join(data, data_tr, by = c("easting", "northing", "time"))
coords_tt <- data_tt[,c("easting", "northing", "time")]
y_tr <- data_tr$y

# set directions 
directions <- c("W", "NW", "N")

# set mcmc 
mcmc <- list(save = 100, burn = 100, thin = 1) 

# run bag sampler
out <- bag(y = y_tr, 
           X = NULL,
           coords = as.matrix(coords_tr),
           X_pred = NULL,
           coords_pred = as.matrix(coords_tt),
           n_partition = c(n_easting, n_northing, n_time),
           breaks_partition = list(breaks_easting = NULL,
                                   breaks_northing = NULL,
                                   breaks_time = NULL),
           directions = directions,
           init = list(tau_sq = tau_sq,
                       sig_sq = sig_sq,
                       w = NULL,
                       z = NULL,
                       psi = c(a, c, kappa),
                       Sn = NULL),
           hyper = list(at = 2, bt = tau_sq,
                        as = 2, bs = sig_sq,
                        la = 0, ua = 0.5,
                        lc = 0, uc = 2,
                        mu0 = NULL, invV0 = NULL),
           mcmc = mcmc,
           n_threads = 10,
           seed = seed,
           verbose = FALSE,
           save_data = TRUE,
           save_est = TRUE,
           debug = list(psi_fixed = FALSE, z_fixed = FALSE))

# summarize results 
## tau_sq 
mean(out$tau_sq_save) %>% round(3)

## sig_sq 
mean(out$sig_sq_save) %>% round(3)

## psi 
rowMeans(out$psi_save) %>% round(3)

## w 
w_bag <- c(rowMeans(out$w_save), # estimated
           rowMeans(out$w_pred_save)) # predicted 

## y 
y_bag <- c(rowMeans(out$y_save), # estimated
           rowMeans(out$y_pred_save)) # predicted 

# # plot predicted space by G-BAG
# bind_rows(coords_tr, coords_tt) %>% 
#   mutate(w = w_bag, y = y_bag) %>% 
#   pivot_longer(cols = c(w, y), names_to = "var", values_to = "val") %>%
#   ggplot() + 
#   geom_raster(aes(easting, northing, fill = val)) + 
#   facet_grid(var ~ factor(time, label = paste("Time =", sort(unique(time))))) + 
#   scale_fill_viridis_c() +
#   labs(x = "Easting", y = "Northing", fill = "",
#        title = "G-BAG: Posterior mean")
