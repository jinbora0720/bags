# Fitted G-BAG is misspecified #
# Figure 5, Figure 6, Figure S1.
rm(list = ls())

# dependencies 
library(tidyverse)
theme_set(theme_bw())
library(meshed)
library(INLA)
library(scico)

# source code 
path <- "~/BAG/"
source(paste0(path, "scr/bdags_utils.R"))

##########
# Result #
##########
# subset saved from larger files bdags_sim2l(or sim2m)_*_all.RDS
# theta3
bdag1 <- readRDS("~/BAG/sim2/bdags_sim2l_bdaggp.RDS") # data0 from bdags_sim2l_bdaggp_all.RDS, others from bdags_sim2l_bdaggp2_all.RDS
mgp1 <- readRDS("~/BAG/sim2/bdags_sim2l_mgp.RDS")
inlares1 <- readRDS("~/BAG/sim2/bdags_sim2l_inla.RDS")

# theta4
bdag2 <- readRDS("~/BAG/sim2/bdags_sim2m_bdaggp.RDS")

#########
# Plots #
#########
# 1. true surface
n_time0 <- 59
tgrid0 <- seq(0, 1, length = n_time0)

## seed error for an unknown reason
## so use it only to generate plots for truth - look better than bdaggp2 
data0 <- bdag1$data0
data0$timename <- paste0("time = ",round(data0$time,3))
plot1 <- data0 %>% 
  filter(time > tgrid0[11] & time <= tgrid0[16]) %>%
  ggplot() + 
  geom_raster(aes(easting, northing, fill = w)) +
  geom_contour(aes(easting, northing, z = w), breaks=2.5, color="black") +
  scale_x_continuous(breaks=c(0, .5, 1)) +
  scale_y_continuous(breaks=c(0, .5, 1)) +
  scale_fill_viridis_c() +
  theme(plot.margin=margin(t=2,l=-2, r=2, b=-5), 
        legend.margin=margin(b=0,r=0,t=0,l=-6)) +
  facet_wrap(~timename, nrow = 1) + 
  labs(x="", y="")

# true surface
bdag2$data0$timename <- paste0("time = ",round(bdag2$data0$time,3))
plot2 <- bdag2$data0 %>% 
  filter(time > tgrid0[40] & time <= tgrid0[45]) %>%
  ggplot() + 
  geom_raster(aes(easting, northing, fill = w)) +
  geom_contour(aes(easting, northing, z = w), breaks=1.7, color="black") +
  scale_x_continuous(breaks=c(0, .5, 1)) +
  scale_y_continuous(breaks=c(0, .5, 1)) +
  scale_fill_viridis_c() +
  theme(plot.margin=margin(t=2,l=-2, r=2, b=-5), 
        legend.margin=margin(b=0,r=0,t=0,l=-6)) +
  facet_wrap(~timename, nrow = 1) + 
  labs(x="", y="")
g <- gridExtra::grid.arrange(plot1, plot2, ncol=1)
# ggsave(plot = g, paste0(path, "plots/sim2_truew.pdf"), width = 12, height = 5)

# 2. wind direction
## assign partitions 
n_easting <- 2
n_northing <- 6

## mcmc 
mcmc <- list(save=1000, burn=5000, thin=2)

## grid
n_time <- 30
tgrid <- seq(0, 1, length = n_time)

## posterior probability 
dir_mean <- data.frame(
  NW = rowMeans(sapply(bdag1$z_save, function(z) apply(z, 1, function(x) sum(x == "NW")/mcmc$save))),
  N = rowMeans(sapply(bdag1$z_save, function(z) apply(z, 1, function(x) sum(x == "N")/mcmc$save))),
  NE = rowMeans(sapply(bdag1$z_save, function(z) apply(z, 1, function(x) sum(x == "NE")/mcmc$save))), 
  E = rowMeans(sapply(bdag1$z_save, function(z) apply(z, 1, function(x) sum(x == "E")/mcmc$save)))
) 

## weighted average of wind directions in angle 
ang_mean <- 7/4*pi*dir_mean$NW + 3/2*pi*dir_mean$N + 5/4*pi*dir_mean$NE + pi*dir_mean$E

## wind with the highest posterior probability 
wind_hpp <- apply(dir_mean, 1, function(x) c("NW", "N", "NE", "E")[which.max(x)])
val_hpp <- apply(dir_mean, 1, max)

## partitions 
easting_cut <- seq(0, 1, length = n_easting + 1)
northing_cut <- seq(0, 1, length = n_northing + 1)
easting_midval <- 0.5*easting_cut[1:n_easting] + 0.5*easting_cut[-1]
northing_midval <- 0.5*northing_cut[1:n_northing] + 0.5*northing_cut[-1]

bdag_wind_df <- data.frame(partition = bdag1$data$ptts_tr, 
                           partition1 = bdag1$data$ptts_tr, 
                           ang_mean = ang_mean, 
                           wind_hpp = factor(wind_hpp, 
                                             levels = c("NW", "N", "NE", "E")),
                           val_hpp = val_hpp) %>% 
  tidyr::separate(partition1, c("row", "col", "time_d"), sep = ",", convert = TRUE) %>% 
  mutate(ang_hpp = ifelse(wind_hpp == "NW", 7/4*pi, 
                          ifelse(wind_hpp == "N", 3/2*pi, 
                                 ifelse(wind_hpp == "NE", 5/4*pi, pi))),
         easting_center = easting_midval[col], 
         northing_center = northing_midval[n_northing + 1 - row], 
         time = tgrid[time_d])

# across time
bdag_bypart <- data.frame(partition = bdag1$data$ptts_tr, dir_mean) %>% 
  tidyr::separate(partition, c("row", "col", "time_d"), sep = ",", convert = TRUE) %>% 
  mutate(easting_center = easting_midval[col], 
         northing_center = northing_midval[n_northing + 1 - row]) %>% 
  group_by(row, col, easting_center, northing_center) %>% 
  summarise(NW = mean(NW), N = mean(N), NE = mean(NE), E = mean(E)) 

## plot: all arrows with prob. in each partition across times
fig1 <- bdag_bypart[,c("NW", "N", "NE", "E")] %>% 
  reshape2::melt() %>% 
  mutate(row = rep(as.numeric(unlist(bdag_bypart[,1])), times=4), 
         col = rep(as.numeric(unlist(bdag_bypart[,2])), times=4),
         easting_center = rep(as.numeric(unlist(bdag_bypart[,3])), times=4),
         northing_center = rep(as.numeric(unlist(bdag_bypart[,4])), times=4), 
         angle = ifelse(variable == "NW", 7/4*pi, ifelse(variable == "N", 3/2*pi, 
                                                         ifelse(variable == "NE", 5/4*pi, pi)))) %>% 
  ggplot() +
  geom_spoke(aes(x=easting_center, y=northing_center+0.08, angle = angle, 
                 # alpha = value, 
                 radius = scales::rescale(value, c(.05, .15)), 
                 size = value,
                 col = variable), 
             arrow = arrow(length = unit(.2, 'cm'))) +
  scale_size_binned(breaks = c(0.1, 0.25, 0.65), range = c(0.3, 1.5),
                    labels = function(x) round(x,2)) +
  scale_x_continuous(breaks=c(0, 0.25, 0.5, 0.75, 1), limits = c(0,1)) +
  scale_color_scico_d(palette = "berlin", direction = -1) + 
  labs(x="", y="", alpha = "Posterior\nprobability", 
       size = "Posterior\nprobability", col = "Direction") 

## plot: histogram of chosen wind directions
fig2 <- table(bdag_wind_df$wind_hpp) %>% 
  as.data.frame() %>% 
  mutate(Prop = Freq/sum(Freq)) %>% 
  ggplot() + 
  geom_col(aes(Var1, Prop, fill = Var1)) +
  scale_fill_scico_d(palette = "berlin", direction = -1) + 
  labs(x="", y="Percentage") + 
  theme(legend.position = "none", 
        axis.text.x = element_text(size = 15)) + 
  scale_y_continuous(labels = scales::percent)

g <- gridExtra::grid.arrange(fig2, fig1, nrow = 1)
# ggsave(paste0(path, 'plots/sim2l_wind_hpp3.pdf'), g, width=11, height=4)

# 3. prediction results in figure
res <- data.frame(vals = c(bdag1$rmspe, mgp1$rmspe, inlares1$rmspe, inlares1$rmspe_ns, 
                            bdag1$mape, mgp1$mape, inlares1$mape, inlares1$mape_ns,
                            bdag1$coverage, mgp1$coverage, inlares1$coverage, inlares1$coverage_ns),
                   model = rep(rep(c("G-BAG", "Q-MGP", "SPDE-stationary", "SPDE-nonstationary"), 
                                   each = 25), 3), 
                   what = rep(c("RMSPE", "MAPE", "95% CI coverage"), each = 100))

res %>% ggplot() + 
  geom_boxplot(aes(model, vals, fill=model), col="black") +
  facet_wrap(~factor(what, levels = c("MAPE", "RMSPE", "95% CI coverage")), scales="free") + 
  labs(x="", y="", fill="") +
  scale_fill_manual(values = c("G-BAG"="#1400FFFF", "Q-MGP"="#C729D6FF",
                               "SPDE-nonstationary"="#FF9C63FF", "SPDE-stationary"="#FFFF60FF")) + 
  theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), legend.position = "bottom")
# ggsave(paste0(path, "plots/sim2l_pred.pdf"), width = 9, height = 3)
